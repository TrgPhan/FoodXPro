"use client"

import { useState } from "react"
import { Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { ScrollArea } from "@/components/ui/scroll-area"
import {
    UtensilsCrossed,
    Package,
    MessageCircle,
    Calendar,
    TrendingUp,
    Sparkles,
    Shield,
    Users,
    ArrowRight,
    CheckCircle,
    Star,
    Play,
    Heart,
    Brain,
    User,
} from "lucide-react"
import { useRouter } from "next/navigation"

const features = [
    {
        icon: Package,
        title: "Qu·∫£n L√Ω Kho Nguy√™n Li·ªáu",
        description: "Theo d√µi nguy√™n li·ªáu trong t·ªß l·∫°nh, h·∫°n s·ª≠ d·ª•ng v√† t·ª± ƒë·ªông nh·∫Øc nh·ªü khi s·∫Øp h·∫øt h·∫°n",
        color: "from-green-500 to-emerald-600",
        bgColor: "bg-green-50",
    },
    {
        icon: UtensilsCrossed,
        title: "Th·ª±c ƒê∆°n Th√¥ng Minh",
        description: "G·ª£i √Ω m√≥n ƒÉn d·ª±a tr√™n nguy√™n li·ªáu c√≥ s·∫µn v√† m·ª•c ti√™u s·ª©c kh·ªèe",
        color: "from-orange-500 to-red-600",
        bgColor: "bg-orange-50",
    },
    {
        icon: MessageCircle,
        title: "Chatbot T∆∞ V·∫•n Dinh D∆∞·ª°ng",
        description: "Tr√≤ chuy·ªán v·ªõi AI ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n dinh d∆∞·ª°ng, h∆∞·ªõng d·∫´n n·∫•u ƒÉn v√† gi·∫£i ƒë√°p th·∫Øc m·∫Øc",
        color: "from-purple-500 to-pink-600",
        bgColor: "bg-purple-50",
    },
    {
        icon: Calendar,
        title: "L·ªãch S·ª≠ Dinh D∆∞·ª°ng Ng∆∞·ªùi D√πng",
        description: "L·∫≠p k·∫ø ho·∫°ch b·ªØa ƒÉn h√†ng ng√†y v√† theo d√µi l·ªãch s·ª≠ dinh d∆∞·ª°ng c·ªßa ng∆∞·ªùi d√πng",
        color: "from-blue-500 to-cyan-600",
        bgColor: "bg-blue-50",
    },
    {
        icon: User,
        title: "H·ªì S∆° S·ª©c Kh·ªèe Ng∆∞·ªùi D√πng",
        description: "Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n, d·ªã ·ª©ng, t√¨nh tr·∫°ng s·ª©c kh·ªèe v√† m·ª•c ti√™u dinh d∆∞·ª°ng",
        color: "from-indigo-500 to-purple-600",
        bgColor: "bg-indigo-50",
    },
]

const stats = [
    { number: "15K+", label: "C√¥ng th·ª©c n·∫•u ƒÉn", icon: UtensilsCrossed },
    { number: "98%", label: "H√†i l√≤ng", icon: Star },
    { number: "24/7", label: "H·ªó tr·ª£ AI", icon: Brain },
]

const testimonials = [
    {
        name: "Nguy·ªÖn Minh Anh",
        role: "Chuy√™n gia dinh d∆∞·ª°ng",
        content: "FoodXPro ƒë√£ gi√∫p t√¥i qu·∫£n l√Ω ch·∫ø ƒë·ªô ƒÉn hi·ªáu qu·∫£ h∆°n 80%. AI assistant r·∫•t th√¥ng minh v√† g·ª£i √Ω m√≥n ƒÉn ph√π h·ª£p!",
        avatar: "üë©‚Äç‚öïÔ∏è",
        rating: 5,
    },
    {
        name: "Tr·∫ßn VƒÉn Nam",
        role: "ƒê·∫ßu b·∫øp chuy√™n nghi·ªáp",
        content: "T√≠nh nƒÉng g·ª£i √Ω m√≥n ƒÉn d·ª±a tr√™n nguy√™n li·ªáu c√≥ s·∫µn th·∫≠t tuy·ªát v·ªùi. Ti·∫øt ki·ªám th·ªùi gian v√† gi·∫£m l√£ng ph√≠ th·ª±c ph·∫©m.",
        avatar: "üë®‚Äçüç≥",
        rating: 5,
    },
    {
        name: "L√™ Th·ªã Hoa",
        role: "M·∫π c·ªßa 2 con",
        content: "·ª®ng d·ª•ng gi√∫p t√¥i l√™n th·ª±c ƒë∆°n c√¢n b·∫±ng cho c·∫£ gia ƒë√¨nh. Con em ƒÉn ngon h∆°n v√† s·ª©c kh·ªèe c·∫£i thi·ªán r√µ r·ªát!",
        avatar: "üë©‚Äçüëß‚Äçüë¶",
        rating: 5,
    },
]

export default function HomeScreen() {
    const router = useRouter()
    const [activeFeature, setActiveFeature] = useState(0)

    const handleGetStarted = () => {
        router.push("/register")
    }

    const handleLogin = () => {
        router.push("/login")
    }

    return (
        <div className="h-full bg-gradient-to-br from-green-50 via-orange-50 to-yellow-50 flex flex-col">
            <ScrollArea className="h-full">
                <div className="min-h-screen">
                    {/* Hero Section */}
                    <section className="relative px-8 py-16 text-center overflow-hidden">
                        {/* Background Elements */}
                        <div className="absolute inset-0 overflow-hidden pointer-events-none">
                            <div className="absolute top-20 left-20 text-6xl opacity-10">ü•ó</div>
                            <div className="absolute top-40 right-32 text-5xl opacity-10">üçé</div>
                            <div className="absolute bottom-32 left-16 text-7xl opacity-10">ü•ï</div>
                            <div className="absolute bottom-20 right-20 text-6xl opacity-10">ü•ë</div>
                            <div className="absolute top-60 left-1/2 text-5xl opacity-10">üçÖ</div>
                        </div>

                        <div className="relative z-10 max-w-4xl mx-auto">
                            {/* Logo */}
                            <div className="w-24 h-24 bg-gradient-to-br from-green-500 via-orange-500 to-yellow-500 rounded-3xl flex items-center justify-center mx-auto mb-8 shadow-2xl">
                                <UtensilsCrossed size={48} className="text-white" />
                            </div>

                            <Badge className="mb-6 bg-green-100 text-green-800 border-green-200 px-4 py-2">
                                <Sparkles size={16} className="mr-2" />
                                ·ª®ng d·ª•ng qu·∫£n l√Ω dinh d∆∞·ª°ng th√¥ng minh cho ng∆∞·ªùi Vi·ªát Nam
                            </Badge>

                            <h1 className="text-5xl md:text-6xl font-bold text-gray-900 mb-6 leading-tight">
                                Qu·∫£n L√Ω Dinh D∆∞·ª°ng
                                <br />
                                <span className="text-transparent bg-clip-text bg-gradient-to-r from-green-600 via-orange-600 to-yellow-600">
                                    Th√¥ng Minh
                                </span>
                            </h1>

                            <p className="text-xl text-gray-600 mb-8 max-w-2xl mx-auto leading-relaxed">
                                T·ªëi ∆∞u h√≥a vi·ªác qu·∫£n l√Ω nguy√™n li·ªáu, g·ª£i √Ω m√≥n ƒÉn t·ª´ AI v√† theo d√µi dinh d∆∞·ª°ng. Bi·∫øn vi·ªác n·∫•u n∆∞·ªõng
                                th√†nh tr·∫£i nghi·ªám th√∫ v·ªã v√† khoa h·ªçc cho s·ª©c kh·ªèe gia ƒë√¨nh.
                            </p>

                            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-12">
                                <Button
                                    onClick={handleGetStarted}
                                    className="px-8 py-4 text-lg bg-gradient-to-r from-green-500 via-orange-500 to-yellow-500 hover:from-green-600 hover:via-orange-600 hover:to-yellow-600 shadow-xl transform hover:scale-105 transition-all duration-200"
                                >
                                    <Sparkles size={20} className="mr-2" />
                                    B·∫Øt ƒê·∫ßu Mi·ªÖn Ph√≠
                                </Button>
                                <Button
                                    variant="outline"
                                    onClick={handleLogin}
                                    className="px-8 py-4 text-lg bg-white/80 backdrop-blur-sm border-gray-200 hover:bg-gray-50"
                                >
                                    <Play size={20} className="mr-2" />
                                    ƒêƒÉng Nh·∫≠p
                                </Button>
                            </div>

                            {/* Stats */}
                            <div className="grid grid-cols-3 gap-6 max-w-2xl mx-auto">
                                {stats.map((stat, index) => {
                                    const Icon = stat.icon
                                    return (
                                        <Card key={index} className="p-6 bg-white/80 backdrop-blur-sm border-0 shadow-lg">
                                            <div className="text-center">
                                                <Icon size={24} className="mx-auto mb-2 text-green-600" />
                                                <div className="text-2xl font-bold text-gray-900">{stat.number}</div>
                                                <div className="text-sm text-gray-600">{stat.label}</div>
                                            </div>
                                        </Card>
                                    )
                                })}
                            </div>
                        </div>
                    </section>

                    {/* Features Section */}
                    <section className="px-8 py-16 bg-white/50 backdrop-blur-sm">
                        <div className="max-w-7xl mx-auto">
                            <div className="text-center mb-16">
                                <Badge className="mb-4 bg-orange-100 text-orange-800 border-orange-200">
                                    <TrendingUp size={16} className="mr-2" />
                                    T√≠nh nƒÉng n·ªïi b·∫≠t
                                </Badge>
                                <h2 className="text-4xl font-bold text-gray-900 mb-4">
                                    T·∫°i Sao Ch·ªçn <span className="text-green-600">FoodXPro</span>?
                                </h2>
                                <p className="text-xl text-gray-600 max-w-2xl mx-auto">
                                    Kh√°m ph√° nh·ªØng t√≠nh nƒÉng ƒë·ªôc ƒë√°o gi√∫p b·∫°n qu·∫£n l√Ω dinh d∆∞·ª°ng m·ªôt c√°ch th√¥ng minh v√† hi·ªáu qu·∫£
                                </p>
                            </div>

                            <div className="grid grid-cols-5 gap-8">
                                {features.map((feature, index) => {
                                    const Icon = feature.icon
                                    return (
                                        <Card
                                            key={index}
                                            className={`p-7 cursor-pointer transition-all duration-300 hover:shadow-xl hover:scale-105 border-0 ${activeFeature === index ? "ring-2 ring-green-400 shadow-xl" : ""
                                                }`}
                                            onMouseEnter={() => setActiveFeature(index)}
                                        >
                                            <div
                                                className={`w-12 h-12 rounded-xl bg-gradient-to-br ${feature.color} flex items-center justify-center mb-4 shadow-lg`}
                                            >
                                                <Icon size={24} className="text-white" />
                                            </div>
                                            <h3 className="text-lg font-bold text-gray-900 mb-2">{feature.title}</h3>
                                            <p className="text-sm text-gray-600 leading-relaxed">{feature.description}</p>
                                        </Card>
                                    )
                                })}
                            </div>
                        </div>
                    </section>

                    {/* Testimonials */}
                    <section className="px-8 py-16 bg-gradient-to-r from-green-500 to-emerald-600">
                        <div className="max-w-6xl mx-auto">
                            <div className="text-center mb-16">
                                <Badge className="mb-4 bg-white/20 text-white border-white/30">
                                    <Star size={16} className="mr-2" />
                                    Kh√°ch h√†ng n√≥i g√¨
                                </Badge>
                                <h2 className="text-4xl font-bold text-white mb-4">ƒê∆∞·ª£c Tin T∆∞·ªüng B·ªüi H√†ng Ngh√¨n Ng∆∞·ªùi</h2>
                                <p className="text-xl text-green-100 max-w-2xl mx-auto">
                                    Kh√°m ph√° nh·ªØng c√¢u chuy·ªán th√†nh c√¥ng t·ª´ c·ªông ƒë·ªìng FoodXPro
                                </p>
                            </div>

                            <div className="grid md:grid-cols-3 gap-8">
                                {testimonials.map((testimonial, index) => (
                                    <Card key={index} className="p-8 bg-white/95 backdrop-blur-sm border-0 shadow-xl">
                                        <div className="flex items-center mb-4">
                                            {[...Array(testimonial.rating)].map((_, i) => (
                                                <Star key={i} size={16} className="text-yellow-400 fill-current" />
                                            ))}
                                        </div>
                                        <p className="text-gray-700 mb-6 leading-relaxed">"{testimonial.content}"</p>
                                        <div className="flex items-center gap-3">
                                            <div className="text-3xl">{testimonial.avatar}</div>
                                            <div>
                                                <div className="font-semibold text-gray-900">{testimonial.name}</div>
                                                <div className="text-sm text-gray-600">{testimonial.role}</div>
                                            </div>
                                        </div>
                                    </Card>
                                ))}
                            </div>
                        </div>
                    </section>

                    {/* CTA Section */}
                    <section className="px-8 py-16 text-center bg-gradient-to-br from-orange-50 to-yellow-50">
                        <div className="max-w-3xl mx-auto">
                            <h2 className="text-4xl font-bold text-gray-900 mb-4">S·∫µn S√†ng B·∫Øt ƒê·∫ßu H√†nh Tr√¨nh Dinh D∆∞·ª°ng?</h2>
                            <p className="text-xl text-gray-600 mb-8">
                                Tham gia c√πng h√†ng ngh√¨n ng∆∞·ªùi ƒë√£ tin t∆∞·ªüng FoodXPro ƒë·ªÉ qu·∫£n l√Ω dinh d∆∞·ª°ng th√¥ng minh
                            </p>
                            <div className="flex flex-col sm:flex-row gap-4 justify-center">
                                <Button
                                    onClick={handleGetStarted}
                                    className="px-8 py-4 text-lg bg-gradient-to-r from-green-500 via-orange-500 to-yellow-500 hover:from-green-600 hover:via-orange-600 hover:to-yellow-600 shadow-xl transform hover:scale-105 transition-all duration-200"
                                >
                                    ƒêƒÉng K√Ω Mi·ªÖn Ph√≠
                                    <ArrowRight size={20} className="ml-2" />
                                </Button>
                                <Button
                                    variant="outline"
                                    onClick={handleLogin}
                                    className="px-8 py-4 text-lg bg-white/80 backdrop-blur-sm"
                                >
                                    ƒê√£ c√≥ t√†i kho·∫£n? ƒêƒÉng nh·∫≠p
                                </Button>
                            </div>
                        </div>
                    </section>
                </div>
            </ScrollArea>
        </div>
    )
}
